/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2024-01-27 10:28:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "data.jsp", out, true);
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\">\r\n");
      out.write("\r\n");
      out.write("  <title>JP225_Nguyen Duy Hoang</title>\r\n");
      out.write("  <meta content=\"\" name=\"description\">\r\n");
      out.write("  <meta content=\"\" name=\"keywords\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Favicons -->\r\n");
      out.write("  <link href=\"/home/img/favicon.png\" rel=\"icon\">\r\n");
      out.write("  <link href=\"/home/img/apple-touch-icon.png\" rel=\"apple-touch-icon\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Google Fonts -->\r\n");
      out.write("  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css2?family=Barlow:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Vendor CSS Files -->\r\n");
      out.write("  <link href=\"/home/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <link href=\"/home/css/bootstrap-icons.css\" rel=\"stylesheet\">\r\n");
      out.write("  <link href=\"/home/css/swiper-bundle.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <link href=\"/home/css/glightbox.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <link href=\"/home/css/aos.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Template Main CSS Files -->\r\n");
      out.write("  <link href=\"/home/css/variables.css\" rel=\"stylesheet\">\r\n");
      out.write("  <link href=\"/home/css/main.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  <!-- ======= Header ======= -->\r\n");
      out.write("  <header id=\"header\" class=\"header d-flex align-items-center fixed-top\">\r\n");
      out.write("    <div class=\"container-fluid container-xl d-flex align-items-center justify-content-between\">\r\n");
      out.write("\r\n");
      out.write("      <a href=\"/home/\" class=\"logo d-flex align-items-center\">\r\n");
      out.write("        <!-- Uncomment the line below if you also wish to use an image logo -->\r\n");
      out.write("        <!-- <img src=\"/home/img/logo.png\" alt=\"\"> -->\r\n");
      out.write("        <h1>ZenBlog</h1>\r\n");
      out.write("      </a>\r\n");
      out.write("\r\n");
      out.write("      <nav id=\"navbar\" class=\"navbar\">\r\n");
      out.write("        <ul>\r\n");
      out.write("          <li><a href=\"/home/\"><i class=\"bi bi-house-fill fs-5\"></i></a></li>\r\n");
      out.write("          <li><a href=\"/home/gioi-thieu/\" class=\"fs-5\">Giới thiệu</a></li>\r\n");
      out.write("          <li class=\"dropdown\"><a href=\"/home/tin-tuc/\" class=\"fs-5\"><span>Tin tức</span> <i class=\"bi bi-chevron-down dropdown-indicator\"></i></a>\r\n");
      out.write("            <ul>\r\n");
      out.write("              <li><a href=\"/home/s\" class=\"fs-5\">Tìm kiếm</a></li>\r\n");
      out.write("              <li><a href=\"#\" class=\"fs-5\">Drop Down 1</a></li>\r\n");
      out.write("              <li><a href=\"#\" class=\"fs-5\">Drop Down 2</a></li>\r\n");
      out.write("              <li><a href=\"#\" class=\"fs-5\">Drop Down 3</a></li>\r\n");
      out.write("              <li><a href=\"#\" class=\"fs-5\">Drop Down 4</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("          </li>\r\n");
      out.write("\r\n");
      out.write("          <li><a href=\"/home/dich-vu/\" class=\"fs-5\">Dịch vụ</a></li>\r\n");
      out.write("          <li><a href=\"/home/hinh-anh/\" class=\"fs-5\">Hình ảnh</a></li>\r\n");
      out.write("          <li><a href=\"/home/lien-he/\" class=\"fs-5\">Liên hệ</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </nav><!-- .navbar -->\r\n");
      out.write("\r\n");
      out.write("      <div class=\"position-relative\">\r\n");
      out.write("        <a href=\"#\" class=\"mx-2\"><span class=\"bi-facebook\"></span></a>\r\n");
      out.write("        <a href=\"#\" class=\"mx-2\"><span class=\"bi-twitter\"></span></a>\r\n");
      out.write("        <a href=\"#\" class=\"mx-2\"><span class=\"bi-instagram\"></span></a>\r\n");
      out.write("\r\n");
      out.write("        <a href=\"#\" class=\"mx-2 js-search-open\"><span class=\"bi-search\"></span></a>\r\n");
      out.write("        <i class=\"bi bi-list mobile-nav-toggle\"></i>\r\n");
      out.write("\r\n");
      out.write("        <!-- ======= Search Form ======= -->\r\n");
      out.write("        <div class=\"search-form-wrap js-search-form-wrap\">\r\n");
      out.write("          <form action=\"/home/tin-tuc/\" method=\"post\" class=\"search-form\">\r\n");
      out.write("            <input type=\"text\" placeholder=\"Tìm kiếm\" class=\"form-control\" name=\"key\">\r\n");
      out.write("            <button class=\"btn btn-primary\"><span class=\"icon bi-search\"></span></button>\r\n");
      out.write("          </form>\r\n");
      out.write("        </div><!-- End Search Form -->\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("  </header><!-- End Header -->");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
